name: API CI

on:
  push:
    branches: [master]
    paths:
      - "client/**"
  pull_request:
    branches: [master]
    paths:
      - "client/**"

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependency
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup python environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Check Python version
        run: python --version
        working-directory: api

      - name: Install requirements
        run: pip install -r requirements.txt
        working-directory: api

      - name: Run Migrations
        run: python manage.py migrate
        working-directory: api
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST: db
          POSTGRES_PORT: 5432

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
        ports:
          - 5432:5432
    steps:
      - name: Install requirements
      - run: pip install -r requirements.txt
      - name: Pulls migrations
      - run: python manage.py migrate
      - name: Run tests
      - run: python manage.py test
        working-directory: api
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
  
  coverage:
    needs: [ test ]
    name: coverage
    runs-on: ubuntu-latest
    steps:
    - name: Code Climate Coverage Action
    - uses: actions/checkout@master
    - name: Coverage Settings
    - uses: actions/setup-node@master
    - name: Setting api
    - run: pip install -r requirements.txt
    - run: python manage.py migrate
    - name: Calculating coverage
    - uses: paambaati/codeclimate-action@v2.7.5
      env:
        CC_TEST_REPORTER_ID: a62422ecf29b56b7ad5e56d69443c5b268664ae894f867e7c81d0acaf03df621
      with:
        coverageCommand: coverage run manage.py test
        debug: true